>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix = [[1, 2, 3], [4, 5 ,6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix = [[1.0, -2.0, -3.0],[-4.0, 5.0, -6.0]]
>>> matrix_divided(matrix, 3.0)
[[0.33, -0.67, -1.0], [-1.33, 1.67, -2.0]]
>>> matrix = [[1e400, 1e500, 1e600],[1e900, 1e800, 1e700]]
>>> matrix_divided(matrix, 3)
[[inf, inf, inf], [inf, inf, inf]]
>>> matrix = "Gideon Koech"
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[[10.0], [65], [37.0]],[[40], [15.0], [66]]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [['5', '6', '7'], ['8', '9', '10']]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case with a string in place of a row
>>> matrix = [[1, 2, 3], [4, 5, 6], 'Gideon Koech']
>>> matrix_divided('matrix', 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = []
>>> type(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[5, 6, 7.0], [8, 9.5, 15]]
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [[1, 2, 3.0], [8, 9.6, 78]]
>>> matrix_divided(matrix, 'Gideon Koech')
Traceback (most recent call last):
TypeError: div must be a number


>>> matrix = [[4.0, 55, 42.0],[30, 13.0, 78]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
